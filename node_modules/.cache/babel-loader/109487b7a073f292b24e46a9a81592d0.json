{"ast":null,"code":"var _jsxFileName = \"/Users/bennylin/PortfolioV2/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Main from \"./containers/Main\";\nimport { ThemeProvider } from \"styled-components\";\nimport { themes } from \"./theme\";\nimport { GlobalStyles } from \"./global\";\nimport { settings } from \"./portfolio\";\nimport ReactGA from \"react-ga\";\n\nfunction App() {\n  useEffect(() => {\n    if (settings.googleTrackingID) {\n      ReactGA.initialize(settings.googleTrackingID, {\n        testMode: process.env.NODE_ENV === \"test\"\n      });\n      ReactGA.pageview(window.location.pathname + window.location.search);\n    }\n  }, []);\n  const [theme, setTheme] = useState(localStorage.getItem(\"theme\") || \"dark\");\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: themes[theme],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(GlobalStyles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Main, {\n    theme: themes[theme],\n    setTheme: setTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/bennylin/PortfolioV2/src/App.js"],"names":["React","useState","useEffect","Main","ThemeProvider","themes","GlobalStyles","settings","ReactGA","App","googleTrackingID","initialize","testMode","process","env","NODE_ENV","pageview","window","location","pathname","search","theme","setTheme","localStorage","getItem"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,MAAT,QAAuB,SAAvB;AACA,SAASC,YAAT,QAA6B,UAA7B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,OAAP,MAAoB,UAApB;;AAEA,SAASC,GAAT,GAAe;AACbP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,QAAQ,CAACG,gBAAb,EAA+B;AAC7BF,MAAAA,OAAO,CAACG,UAAR,CAAmBJ,QAAQ,CAACG,gBAA5B,EAA8C;AAC5CE,QAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB;AADS,OAA9C;AAGAP,MAAAA,OAAO,CAACQ,QAAR,CAAiBC,MAAM,CAACC,QAAP,CAAgBC,QAAhB,GAA2BF,MAAM,CAACC,QAAP,CAAgBE,MAA5D;AACD;AACF,GAPQ,EAON,EAPM,CAAT;AASA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAACsB,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiC,MAAlC,CAAlC;AAEA,sBACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEnB,MAAM,CAACgB,KAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,uDACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEhB,MAAM,CAACgB,KAAD,CAAnB;AAA4B,IAAA,QAAQ,EAAEC,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFF,CADF,CADF;AAUD;;AAED,eAAeb,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Main from \"./containers/Main\";\nimport { ThemeProvider } from \"styled-components\";\nimport { themes } from \"./theme\";\nimport { GlobalStyles } from \"./global\";\nimport { settings } from \"./portfolio\";\nimport ReactGA from \"react-ga\";\n\nfunction App() {\n  useEffect(() => {\n    if (settings.googleTrackingID) {\n      ReactGA.initialize(settings.googleTrackingID, {\n        testMode: process.env.NODE_ENV === \"test\",\n      });\n      ReactGA.pageview(window.location.pathname + window.location.search);\n    }\n  }, []);\n\n  const [theme, setTheme] = useState(localStorage.getItem(\"theme\") || \"dark\");\n\n  return (\n    <ThemeProvider theme={themes[theme]}>\n      <>\n        <GlobalStyles />\n        <div>\n            <Main theme={themes[theme]} setTheme={setTheme} />\n        </div>\n      </>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}